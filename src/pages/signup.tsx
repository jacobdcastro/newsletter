import React from 'react';
import { useState } from 'react';
import Head from 'next/head';
import Image from 'next/image';
// @ts-ignore
import styles from '../styles/Home.module.css';
import s from '../styles/SignUp.module.css';
import { ConnectWallet } from '../components/ConnectWallet';
import { Navbar } from '../components/Navbar';
import { useCreator } from 'src/hooks/useCreator';
import useCreatorSignup from 'src/hooks/useCreatorSignup';

type Props = {};

const SignUpPage = (props: Props) => {

  const [selectedImage, setSelectedImage] = useState();

  const imageChange = e => {
    if (e.target.files && e.target.files.length > 0) {
      setSelectedImage(e.target.files[0]);
    }
  };

  const removeSelectedImage = () => {
    setSelectedImage(null);
  };


  const {
    isLoading: signupLoading,
    setUsername,
    setPublicationName,
    setPublicationDescription,
    setProfileImg,
    setPublicationImg,
    signup
  } = useCreatorSignup();

  const {
    publishNewsletter,
    setNewsletterImg,
    isLoading,
    isCreator,
  } = useCreator();

  return (
    <div className={styles.container}>
      {/* @ts-ignore */}
      <Head>
        <title>News NFT</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar></Navbar>

      <main className={styles.main}>
        <div className={styles.contentcontainer}>
          <span>
            <img
              className={styles.svgLogo}
              src="newsnft_logo.svg"
              alt="newsnft logo"
            />
          </span>
          <h1 className={styles.title}>
            Sign Up to Become
            <br></br>a Creator!
          </h1>

          <ConnectWallet />

          <div className={'text-center'}>
            <div className={styles.grid}>
              <div className={s.card}>
                <h2 className={'font-bold'}>Become a Creator!</h2>
                <p className={'text-sm'}>
                  Becoming a Creator on NewsNFT takes your newsletters to the
                  next level:
                  <p>
                    <ul>
                      <li>‚úîÔ∏è Turn your newsletters into NFTs </li>
                      <li>‚úîÔ∏è Airdrop your publications to subscribers</li>
                      <li>‚úîÔ∏è Earn $NEWFT tokens </li>
                    </ul>
                    Why settle for boring newsletters? <br></br>
                    Sign up with NewsNFT üëá
                  </p>
                </p>
                <br />

                <form className={s.formTable}>
                  <div className={s.root}>
                    <>
                      <input
                        type="file"
                        onChange={e => setNewsletterImg(e.target.files[0])}
                      />
                      <button onClick={() => publishNewsletter()}>
                        {isLoading ? 'loading...' : 'Click meeeeee'}
                      </button>
                    </>

                    <div>
                      {/* <h1>Hmm you are not a creator yet üòÖ</h1> */}
                      <form>
                      
                          <p className={s.pTable}>
                            <label className={s.labelTable} htmlFor="name">
                              Display Name: 
                            </label>
                            <input
                              placeholder="Username"
                              type="text"
                              className={s.inputTable}
                              onChange={e => setUsername(e.target.value)}
                            />
                          </p>
                    
                        <p className={s.pTable}>
                        <label className={s.labelTable} htmlFor="name">
                              Publication Name: 
                            </label>
                          <input
                            placeholder="Publication Name"
                            type="text"
                            className={s.inputTable}
                            onChange={e => setPublicationName(e.target.value)}
                          />
                          </p>
                  
                        <p className={s.pTable}>
                        <label className={s.labelTable} htmlFor="name">
                              Publication Description: 
                            </label>
                          <input
                            placeholder="Describe your publication"
                            type="text"
                            className={s.inputTableLong}
                            onChange={e =>
                              setPublicationDescription(e.target.value)
                            }
                          />
                          </p>
                       
                        <div>
                          <input
                            type="file"
                            onChange={e => setProfileImg(e.target.files[0])}
                          />
                        </div>
                        <div>
                          <input
                            type="file"
                            onChange={e => setPublicationImg(e.target.files[0])}
                          />
                        </div>
                        <div>
                          <button type="submit" className={s.submitButton} disabled={signupLoading} onSubmit={signup}>
                            {signupLoading ? 'please wait...' : 'Submit!'}
                          </button>
                        </div>
                      </form>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </main>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default SignUpPage;
